---
name: "Test"

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

concurrency:
  group: ${{ github.head_ref }}-test
  cancel-in-progress: true

jobs:
  get-changed-images:
    uses: tuxpeople/containers/.github/workflows/get-changed-images.yaml@main

  list-build-images:
    needs: [get-changed-images]
    runs-on: ubuntu-latest
    name: list-build-images
    if: ${{ needs.get-changed-images.outputs.addedOrModified == 'true' }}
    steps:
      - run: |
          for file in ${{ needs.get-changed-images.outputs.addedOrModifiedImages }}; do
            echo "$file was changed"
          done

  prep-matrix:
    needs: [get-changed-images]
    runs-on: ubuntu-latest
    name: prep-matrix
    if: ${{ needs.get-changed-images.outputs.addedOrModified == 'true' }}
    outputs:
      containermatrix: ${{ steps.matrix.outputs.containermatrix }}
    steps:
      - id: matrix
        run: |
          ARRAY=$(echo ${{ needs.get-changed-images.outputs.addedOrModifiedImages }} | tr "," "\n")
          echo "containermatrix=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${ARRAY[@]}")" >> $GITHUB_OUTPUT

  read-yaml:
    needs: [prep-matrix]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: ${{ fromJson(needs.prep-matrix.outputs.containermatrix) }}
    name: Test read-yaml
    steps:
      - uses: actions/checkout@v1

      - name: read-yaml-file
        uses: pietrobolcato/action-read-yaml@1.1.0
        id: read_metadata
        with:
          config: ${{ github.workspace }}/apps/${{ matrix.container }}/metadata.yaml

      - name: use-yaml-file
        run: |
          echo app name: ${{ steps.read_metadata.outputs['app'] }}
          echo is it a base image: ${{ steps.read_metadata.outputs['base'] }}
          echo first channel name: ${{ steps.read_metadata.outputs['channels.0.name'] }}
          echo first channel plattforms: ${{ steps.read_metadata.outputs['channels.0.plattforms'] }}

  # changed_files:
  #   runs-on: ubuntu-latest
  #   name: Test changed-files
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

  #     - name: Get changed files
  #       id: changed-files
  #       uses: tj-actions/changed-files@v40
  #       with:
  #         dir_names: "true"

  #     - name: List all changed files
  #       run: |
  #         for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
  #           echo "$file was changed"
  #         done
